<?php
// $Id: $


/**
 * Implementation of hook_block().
 */
function accordion_block($op = 'list', $delta = 0, $edit = array()) {

  static $core_sent;
  $path = drupal_get_path('module', 'accordion');
  if ( !$core_sent ){
    drupal_add_js( $path."/js/jquery.dimensions.js" );
    drupal_add_js( $path."/js/jquery.easing.js" );
    drupal_add_js( $path."/js/jquery.accordion.js" );
  }
	drupal_add_css(drupal_get_path('module', 'accordion') .'/accordion.css');

  switch ($op) {
    case 'configure':
      $form = array();
      if ($delta == 0) {
        $form['accordion_string'] = array(
          '#type' => 'textfield',
          '#title' => t('Block contents'),
          '#size' => 60,
          '#description' => t('This string will appear in the example block.'),
          '#default_value' =>
            variable_get('accordion_string',  t('Some example content.')),
        );
      }
      return $form;
    case 'save':
      if ($delta == 0) {
        variable_set('accordion_string', $edit['accordion_string']);
      }
      return;
    case 'list':
      for ($i=1; $i <= variable_get('accordion_blockcount', '1'); $i++) {
        $temp = accordion_getblock( array('module'=>'accordion' , 'delta'=>$i));
        $blocks[$i]['info'] = $temp->subject .' (Accordion)';
      }
      return $blocks;
    case 'view': default:
      drupal_add_js(_accordion_getjsinit($delta), "inline");
      $block['subject'] = 'Accordion '. $delta;
      $block['content'] = accordion_contents($delta);
      return $block;
  }
}

function _accordion_getjsinit($delta) {
  $var_name = 'accordion_' .$delta;

	$autoheightvar = $var_name .'_autoheight';
  if (variable_get($autoheightvar, 0)) {
    $autoheightstr = ', autoheight: true';
	}
	else {
    $autoheightstr = ', autoheight: false';
	}

	$alwaysopenvar = $var_name .'_alwaysopen';
  if (variable_get($alwaysopenvar, 1)) {
    $alwaysopenstr = ', alwaysOpen: true';
	}
	else {
    $alwaysopenstr = ', alwaysOpen: false';
	}

	$closedatstartvar = $var_name .'_closedatstart';
  if (variable_get($closedatstartvar, 0)) {
    $closedatstartstr = ', active: false';
	}
	else {
    $closedatstartstr = '';
	}

	$animationvar = $var_name .'_animation';
  $animation_style = variable_get($animationvar, '');
  if ($animation_style && ($animation_style != 'default')) {
    $animationstr = ', animated: "'. $animation_style .'"';
	}
	else {
    $animationstr = '';
	}

	$fillspacevar = $var_name .'_fillspace';
  if (variable_get($fillspacevar, 0)) {
    $fillspacestr = ', fillSpace: true';
	}
	else {
    $fillspacestr = '';
	}

	$eventvar = $var_name .'_event';
  $event_val = variable_get($eventvar, '');
  if ($event_val && ($event_val != 'click')) {
    $eventstr = ', event: "'. $event_val .'"';
	}
	else {
    $eventstr = '';
	}

	$output .= "jQuery(function(){ jQuery('#accordion-block-". $delta ."').accordion({ header: 'a.accordion-header'". $alwaysopenstr . $autoheightstr . $animationstr . $fillspacestr . $eventstr . $closedatstartstr ." }); });";
  if (variable_get($closedatstartvar, 0)) {
  	$output .= "jQuery(function(){ jQuery('#accordion-block-". $delta ."').accordion('activate', -1 ); }); ";
	}
  return $output;
}

/**
 * Implemention of hook_menu().
 */
function accordion_menu($may_cache) {
  if (!$may_cache) {
  }
  else {
    $items[] = array(
      'path' => 'admin/settings/accordion',
      'title' => t('Accordion Blocks'),
      'description' => t('Configure Accordion Blocks.'),
      'callback' => 'drupal_get_form',
      'callback arguments' => array('accordion_admin_settings'),
      'access' => user_access('administer site configuration'),
      'type' => MENU_NORMAL_ITEM,
    );
  }

  return $items;
}

/**
 * Settings form as implemented by hook_menu
 */
function accordion_admin_settings() {
  $form['accordion_blockcount'] = array(
    '#type' => 'select',
    '#title' => t('Number of Accordion Blocks'),
    '#description' => t('The total number of Accordion blocks to create.'),
    '#default_value' => variable_get('accordion_blockcount', '1'),
    '#options' => drupal_map_assoc(array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10)),
  );

  return system_settings_form($form);
}

/**
 * Implemention of hook_form_alter().
 */
function accordion_form_alter($form_id,&$form) {
  if ($form_id == 'block_admin_configure'){
    $module = $form['module']['#value'];
    if ($module == 'accordion') {
      $delta = $form['delta']['#value'];
      $var_name = $module . '_' .$delta;

      $form['block_settings']['#weight'] = -1;
			
			$form['accordion'] = array(
				'#type' => 'fieldset',
				'#title' => t('Accordion settings'),
				'#collapsible' => TRUE,
				'#weight' => 0,
			);

			//generate the select list of all blocks from all modules
			$options['None'] = 'None';
			foreach (module_list() as $module) {
				$module_blocks = module_invoke($module, 'block', 'list');
				if ($module_blocks && $module != 'accordion') {
					foreach ($module_blocks as $delta => $block) {
						$options["$module-$delta"] = $module .": ". strip_tags($block['info']);
					}
				}
			}
	
			$form['accordion']['blocks'] = array(
				'#type' => 'fieldset',
				'#title' => t('Blocks in This Accordion'),
				'#collapsible' => TRUE,
				'#weight' => 0,
			);

			$block1var = $var_name .'_block1';
			$form['accordion']['blocks']['block1'] = array(
				'#type' => 'select',
				'#options' => $options,
				'#width' => 30,
				'#default_value' => variable_get($block1var, 'None'),
			);

			$block2var = $var_name .'_block2';
			$form['accordion']['blocks']['block2'] = array(
				'#type' => 'select',
				'#options' => $options,
				'#width' => 30,
				'#default_value' => variable_get($block2var, 'None'),
			);

			$block3var = $var_name .'_block3';
			$form['accordion']['blocks']['block3'] = array(
				'#type' => 'select',
				'#options' => $options,
				'#width' => 30,
				'#default_value' => variable_get($block3var, 'None'),
			);

			$block4var = $var_name .'_block4';
			$form['accordion']['blocks']['block4'] = array(
				'#type' => 'select',
				'#options' => $options,
				'#width' => 30,
				'#default_value' => variable_get($block4var, 'None'),
			);

			$block5var = $var_name .'_block5';
			$form['accordion']['blocks']['block5'] = array(
				'#type' => 'select',
				'#options' => $options,
				'#width' => 30,
				'#default_value' => variable_get($block5var, 'None'),
			);

			$alwaysopenvar = $var_name .'_alwaysopen';
			$form['accordion']['alwaysopen'] = array (
			 '#type' => 'checkbox',
			 '#title' => t('Always Open'),
			 '#default_value' => variable_get($alwaysopenvar, 1),
			);

			$closedatstartvar = $var_name .'_closedatstart';
			$form['accordion']['closedatstart'] = array (
			 '#type' => 'checkbox',
			 '#title' => t('Closed at Start'),
			 '#default_value' => variable_get($closedatstartvar, 1),
			);

			$autoheightvar = $var_name .'_autoheight';
			$form['accordion']['autoheight'] = array (
			 '#type' => 'checkbox',
			 '#title' => t('AutoHeight'),
			 '#default_value' => variable_get($autoheightvar, 0),
			);

			$fillspacevar = $var_name .'_fillspace';
			$form['accordion']['fillspace'] = array (
			 '#type' => 'checkbox',
			 '#title' => t('FillSpace'),
			 '#default_value' => variable_get($fillspacevar, 0),
			);

			$animationvar = $var_name .'_animation';
			$form['accordion']['animation'] = array (
				'#type' => 'select',
				'#title' => t('Animation Method'),
				'#description' => t("Animation Method."),
				'#options' => drupal_map_assoc(array('default', 'bounceslide', 'easeslide')),
        '#default_value' => variable_get($animationvar, 0),
			);

			$eventvar = $var_name .'_event';
			$form['accordion']['event'] = array (
				'#type' => 'select',
				'#title' => t('Trigger Event'),
				'#description' => t("Trigger Event."),
				'#options' => drupal_map_assoc(array('click', 'mouseover')),
        '#default_value' => variable_get($eventvar, 0),
			);
			
      $form['#submit']['accordion_save'] = array();
			
		}
  }
}

function accordion_save($form_id,$form_values) {
  
  $var_name = $form_values['module'] . '_' . $form_values['delta'];
  $autoheightvar = $var_name .'_autoheight';
  if ($form_values['autoheight']) {
	  variable_set($autoheightvar, $form_values['autoheight']);
	}
	else {
	  variable_del($autoheightvar);
	}

  $alwaysopenvar = $var_name .'_alwaysopen';
  if ($form_values['alwaysopen']) {
	  variable_set($alwaysopenvar, $form_values['alwaysopen']);
	}
	else {
	  variable_set($alwaysopenvar, 0);
	}

	$closedatstartvar = $var_name .'_closedatstart';
  if ($form_values['closedatstart']) {
	  variable_set($closedatstartvar, $form_values['closedatstart']);
	}
	else {
	  variable_set($closedatstartvar, 0);
	}

	$animationvar = $var_name .'_animation';
  if ($form_values['animation']) {
	  variable_set($animationvar, $form_values['animation']);
	}
	else {
	  variable_del($animationvar);
	}
	$eventvar = $var_name .'_event';
  if ($form_values['event']) {
	  variable_set($eventvar, $form_values['event']);
	}
	else {
	  variable_del($animationvar);
	}
	$fillspacevar = $var_name .'_fillspace';
  if ($form_values['fillspace']) {
	  variable_set($fillspacevar, $form_values['fillspace']);
	}
	else {
	  variable_del($fillspacevar);
	}
	$block1var = $var_name .'_block1';
  if ($form_values['block1'] && ($form_values['block1'] != 'None')) {
	  variable_set($block1var, $form_values['block1']);
	}
	else {
	  variable_del($block1var);
	}

	$block2var = $var_name .'_block2';
  if ($form_values['block2'] && ($form_values['block2'] != 'None')) {
	  variable_set($block2var, $form_values['block2']);
	}
	else {
	  variable_del($block2var);
	}

	$block3var = $var_name .'_block3';
  if ($form_values['block3'] && ($form_values['block3'] != 'None')) {
	  variable_set($block3var, $form_values['block3']);
	}
	else {
	  variable_del($block3var);
	}

	$block4var = $var_name .'_block4';
  if ($form_values['block4'] && ($form_values['block4'] != 'None')) {
	  variable_set($block4var, $form_values['block4']);
	}
	else {
	  variable_del($block4var);
	}

	$block5var = $var_name .'_block5';
  if ($form_values['block5'] && ($form_values['block5'] != 'None')) {
	  variable_set($block5var, $form_values['block5']);
	}
	else {
	  variable_del($block5var);
	}

}


/**
 * A block content function.
 */
function accordion_contents($which_block) {
  for ($i = 1; $i <= 5; $i++) {
    $varname = "accordion_". $which_block ."_block". $i;
    $varvalue = variable_get($varname, '');
    if ($varvalue) {
      list($module , $delta) = explode("-" , $varvalue);
      $temp = accordion_getblock( array( 'module'=>$module , 'delta'=>$delta , 'override_title' => 0 , 'override_title_text' => '' ) );
      $accordion_blocks .= "<div class='accordion-container-". $i ."'>";
      $accordion_blocks .= "<a class='accordion-header'>". $temp->subject ."</a>";
      $accordion_blocks .= "<div class='accordion-content'>" . $temp->content ."</div>";
      $accordion_blocks .= "</div>";
		}
	}
  if ($accordion_blocks) {
    $output = "<div class='accordion-block' style='float:left;'  id='accordion-block-". $which_block ."'>";
    $output .= $accordion_blocks;
    $output .= "</div>";
	}
  return $output;
}


/**
 * in response to find the block html 
 *
 * @param[module]:module name
 * @param[delta]
 * @param[override_title]
 * @param['override_title_text']
 *
 * @return $block array
 */
function accordion_getblock($conf) {
  $block = (object) module_invoke($conf['module'], 'block', 'view', $conf['delta']);
  
  $block->module = $conf['module'];
  $block->delta = $conf['delta'];
  
  $temp = db_fetch_array(db_query("SELECT title FROM {blocks} WHERE module = '".$conf['module']."' AND delta ='".$conf['delta']."'" ) );
  if ( $temp['title'] ){
    $block->subject = $temp['title'];
  }
  
  if ( !$block->subject ){
    $temp = block_box_get( $conf['delta'] );
    $block->subject = $temp['title'];
  }

  $result = db_query("SELECT pages, visibility FROM {blocks} WHERE module = '%s' AND delta = %d",$block->module, $block->delta);

  $block = (object)array_merge((array)$block,(array)db_fetch_object($result));
  if ($block->pages) {
    if ($block->visibility < 2) {
      $path = drupal_get_path_alias($_GET['q']);
      $regexp = '/^('. preg_replace(array('/(\r\n?|\n)/', '/\\\\\*/', '/(^|\|)\\\\<front\\\\>($|\|)/'), array('|', '.*', '\1'. preg_quote(variable_get('site_frontpage', 'node'), '/') .'\2'), preg_quote($block->pages, '/')) .')$/';
      $page_match = !($block->visibility xor preg_match($regexp, $path));
    } else {
      $page_match = drupal_eval($block->pages);
    }
  } else {
    $page_match = TRUE;
  }
  if($page_match) {
    $output = $block;
  }
  return $output;
}
